version: '2'
services:
  sessionbuilder-app:
    build: .
    image: edoardofanciu/sessionbuilder-app:latest
    networks:
      - my-network
    depends_on:
      - postgresdb
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - APP_ENVIRONMENT=production
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /dev/shm:/dev/shm:rw
    stdin_open: true
    tty: true
    restart: no

  postgresdb:
    image: postgres:15-alpine
    container_name: postgres-container
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sessionbuilder -d sessionbuilder"]
      interval: 5s
      timeout: 5s
      retries: 10

  sonarqube:
    image: sonarqube:lts-community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    ports:
      - "9000:9000"
    networks:
      - my-network
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  db:
    image: postgres:15
    hostname: postgresql
    container_name: postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - my-network

volumes:
  sonarqube_data:
  sonarqube_temp:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql_data:
  postgres_data:

networks:
  my-network:
    driver: bridge